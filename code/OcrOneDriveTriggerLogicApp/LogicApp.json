{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "onedrive_1_Connection_Name": {
      "type": "string",
      "defaultValue": "onedrive"
    },
    "onedrive_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": ""
    },
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "razsharedstore_connection"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      },
      "defaultValue": "razsharedstore"
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "southafricanorth",
        "southafricawest"
      ],
      "defaultValue": "southeastasia"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "raz-ocr-onedrive-trigger-logic"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_file_is_created": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 1
              },
              "metadata": {
                "A8546FE4B5BBEFDD!67220": "/RocketBook OCR"
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['onedrive']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/triggers/onnewfilev2",
                "queries": {
                  "folderId": "A8546FE4B5BBEFDD!67220",
                  "includeSubfolders": false,
                  "inferContentType": true,
                  "simulate": false
                }
              }
            }
          },
          "actions": {
            "Condition": {
              "actions": {
                "Create_blob": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": "@triggerBody()",
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/datasets/default/files",
                    "queries": {
                      "folderPath": "/ocr",
                      "name": "@base64ToString(triggerOutputs()['headers']['x-ms-file-name-encoded'])",
                      "queryParametersSingleEncoded": true
                    }
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                },
                "HTTP": {
                  "runAfter": {
                    "Create_blob": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "body": {
                      "CreatedDateTime": "@{body('Create_blob')?['LastModified']}",
                      "Name": "@{body('Create_blob')?['Name']}",
                      "URL": "https://<ACCOUNTNAME>.blob.core.windows.net@{body('Create_blob')?['Path']}"
                    },
                    "headers": {
                      "Content-Type": "application/json"
                    },
                    "method": "POST",
                    "uri": ""
                  }
                }
              },
              "runAfter": {},
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@triggerOutputs()['headers']['Content-Type']",
                      "image/png"
                    ]
                  },
                  {
                    "equals": [
                      "@triggerOutputs()['headers']['Content-Type']",
                      "image/svg"
                    ]
                  },
                  {
                    "equals": [
                      "@triggerOutputs()['headers']['Content-Type']",
                      "image/jpg"
                    ]
                  },
                  {
                    "equals": [
                      "@triggerOutputs()['headers']['Content-Type']",
                      "image/jpeg"
                    ]
                  }
                ]
              },
              "type": "If"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              },
              "onedrive": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'onedrive')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('onedrive_1_Connection_Name'))]",
                "connectionName": "[parameters('onedrive_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('onedrive_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('onedrive_1_Connection_Name')]",
      "location": "southeastasia",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'onedrive')]"
        },
        "displayName": "[parameters('onedrive_1_Connection_DisplayName')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "southeastasia",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]"
        }
      }
    }
  ],
  "outputs": {}
}